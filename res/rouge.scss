---
# YAML Front Matter required so that Jekyll will invoke SASS/SCSS processing
---

// Default / Light Mode
:root {
    --rouge-clr-fore: black;        // Foreground
    --rouge-clr-back: #eef;         // Background
    --rouge-clr-g:    black;        // Generic
    --rouge-clr-c:    #018000;      // Comment
    --rouge-clr-err:  #E50000;      // Error
    --rouge-clr-k:    #0431FA;      // Keyword
    --rouge-clr-o:    black;        // Operator
    --rouge-clr-m:    #098658;      // Literal.Number
    --rouge-clr-s:    #A31515;      // Literal.String
    --rouge-clr-n:    #795E26;      // Name
    --rouge-clr-dir:  darkmagenta;  // Directive (not directory)
    --rouge-clr-del-back: #fdd;     // Deleted background
    --rouge-clr-ins-back: #dfd;     // Inserted background
}

// Dark Mode
@media (prefers-color-scheme: dark) {
:root {
    --rouge-clr-fore: white;        // Foreground
    --rouge-clr-back: #1F1F1F;      // Background
    --rouge-clr-g:    white;        // Generic
    --rouge-clr-c:    #6A9949;      // Comment
    --rouge-clr-err:  #D21414;      // Error
    --rouge-clr-k:    #569CD6;      // Keyword
    --rouge-clr-o:    #D4D4D4;      // Operator
    --rouge-clr-m:    #B5CEA8;      // Literal.Number
    --rouge-clr-s:    #CE9178;      // Literal.String
    --rouge-clr-n:    #DCDCAA;      // Name
    --rouge-clr-dir:  #DA70D6;  // Directive (not directory)
    --rouge-clr-del-back: #fdd;     // Deleted background
    --rouge-clr-ins-back: #dfd;     // Inserted background
}
}

.highlight {
    .highlighter-rouge & {
        color: var(--rouge-clr-fore);
        background-color: var(--rouge-clr-back);
    }

    // Basics
    .g     { color: var(--rouge-clr-g);   } // Generic
    .c     { color: var(--rouge-clr-c); font-style: italic; } // Comment
    .err   { color: var(--rouge-clr-err); } // Error
    .k     { color: var(--rouge-clr-k); } // Keyword
    .o     { color: var(--rouge-clr-o); }   // Operator
    .m     { color: var(--rouge-clr-m); } // Literal.Number
    .s     { color: var(--rouge-clr-s); } // Literal.String
    // The following are not in Rouge but are used as the basis of the values below
    .n     { color: var(--rouge-clr-n); } // Name
    .del   { color: #000; background-color: var(--rouge-clr-del-back) } // Deleted
    .ins   { color: #000; background-color: var(--rouge-clr-ins-back) } // Inserted
    .dir   { color: var(--rouge-clr-dir); } // Directive (not directory)

    // Everything Else
    .cm    { @extend .c; } // Comment.Multiline
    .cp    { @extend .dir; } // Comment.Preproc
    .c1    { @extend .c; } // Comment.Single
    .cs    { @extend .c; } // Comment.Special

    .gd    { @extend .del; } // Generic.Deleted
    .gd .x { @extend .del; } // Generic.Deleted.Specific
    .ge    { @extend .g;   } // Generic.Emph
    .gr    { @extend .err; } // Generic.Error
    .gh    { @extend .g;   } // Generic.Heading
    .gi    { @extend .ins; } // Generic.Inserted
    .gi .x { @extend .ins; } // Generic.Inserted.Specific
    .go    { @extend .g;   } // Generic.Output
    .gp    { @extend .g;   } // Generic.Prompt
    .gs    { @extend .g;   } // Generic.Strong
    .gu    { @extend .g;   } // Generic.Subheading
    .gt    { @extend .g;   } // Generic.Traceback

    .kc    { @extend .k;   } // Keyword.Constant
    .kd    { @extend .k;   } // Keyword.Declaration
    .kp    { @extend .k;   } // Keyword.Pseudo
    .kr    { @extend .k;   } // Keyword.Reserved
    .kt    { @extend .k;   } // Keyword.Type

    .na    { @extend .n;   } // Name.Attribute
    .nb    { @extend .n;   } // Name.Builtin
    .nc    { @extend .n;   } // Name.Class
    .no    { @extend .n;   } // Name.Constant
    .ni    { @extend .n;   } // Name.Entity
    .ne    { @extend .n;   } // Name.Exception
    .nf    { @extend .n;   } // Name.Function
    .nn    { @extend .n;   } // Name.Namespace
    .nt    { @extend .n;   } // Name.Tag
    .nv    { @extend .n;   } // Name.Variable
    .bp    { @extend .n;   } // Name.Builtin.Pseudo
    .vc    { @extend .n;   } // Name.Variable.Class
    .vg    { @extend .n;   } // Name.Variable.Global
    .vi    { @extend .n;   } // Name.Variable.Instance
    .ow    { @extend .o;   } // Operator.Word
    .w     { @extend .g;   } // Text.Whitespace
    .mf    { @extend .m;   } // Literal.Number.Float
    .mh    { @extend .m;   } // Literal.Number.Hex
    .mi    { @extend .m;   } // Literal.Number.Integer
    .mo    { @extend .m;   } // Literal.Number.Oct
    .il    { @extend .m;   } // Literal.Number.Integer.Long
    .sb    { @extend .s;   } // Literal.String.Backtick
    .sc    { @extend .s;   } // Literal.String.Char
    .sd    { @extend .s;   } // Literal.String.Doc
    .s2    { @extend .s;   } // Literal.String.Double
    .se    { @extend .s;   } // Literal.String.Escape
    .sh    { @extend .s;   } // Literal.String.Heredoc
    .si    { @extend .s;   } // Literal.String.Interpol
    .sx    { @extend .s;   } // Literal.String.Other
    .sr    { @extend .s;   } // Literal.String.Regex
    .s1    { @extend .s;   } // Literal.String.Single
    .ss    { @extend .s;   } // Literal.String.Symbol
}
